{"version":3,"sources":["components/design/Display.js","components/design/Setting.js","config/firebaseConfig.js","components/dashboard/Dashboard.js","store/actions/saveDesignAction.js","components/navbar/Navbar.js","components/project/ProjectList.js","components/project/Projects.js","App.js","store/reducers/authReducer.js","store/reducers/designReducer.js","store/reducers/mainReducer.js","index.js"],"names":["Display","display","textFormat","console","log","textColor","className","src","tshirtColor","alt","style","fontSize","color","upperText","url","lowerText","urlImgBase","Settings","uploadImage","textSize","saveDesign","onClick","id","onChange","type","placeholder","min","max","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","Dashboard","state","memeImg","handleTshirtColor","e","setState","target","handleUpperText","value","handleLowerText","handleTextSize","handleTextColor","handleImageUpload","files","image","ref","name","put","on","snapshot","error","child","getDownloadURL","then","handleSaveDesign","props","size","this","parseInt","formatText","Setting","Component","connect","dispatch","design","getState","Navbar","to","data-toggle","data-target","ProjectLists","Project","designs","map","ProjectList","key","App","initialstate","authReducer","designReducer","action","mainReducer","combineReducers","auth","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c0844e0.chunk.js","sourcesContent":["import React from 'react';\nimport './Display.css';\n\n\nconst Display = ({display,textFormat}) => {\n    console.log(display.textColor);\n    return(\n        <div className='card card-content'>\n            <div className='imgTshirt text-center'>\n                 <img \n                    className='img-responsive'\n                    src= {`https://res.cloudinary.com/dkkgmzpqd/image/upload/v1545217305/T-shirt%20Images/${display.tshirtColor}`}\n                    alt='img-Tshirt'\n                    >\n                </img>\n            </div>\n            <div className='memeText text-center'>\n                <div className='upperText'>\n                    <p style={{fontSize:textFormat,color:display.textColor}}>{display.upperText}</p>\n                </div>\n                <img\n                    src= {`${display.url}` || 'http://via.placeholder.com/400x300'} \n                    alt='meme-text'\n                />\n                <div className='lowerText'>\n                    <p style={{fontSize:textFormat,color:display.textColor}}>{display.lowerText}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Display;","import React from 'react';\nconst urlImgBase = 'https://res.cloudinary.com/dkkgmzpqd/image/upload/v1545217305/T-shirt%20Images/';\n\n\nconst Settings =({color,upperText,lowerText,uploadImage,textSize,textColor,saveDesign})=>{\n    return(\n        <div className='card bg-light container'>\n            <h3 className='text-center'>Settings</h3>\n            <h4 > Change T-shirt Color</h4>\n            <div className='tshirt-color'>\n                <img onClick={color} src={`${urlImgBase}black.png`} alt='black-tshirt' id='black'></img>\n                <img onClick={color} src={`${urlImgBase}white.png`} alt='white-tshirt' id='white'></img>\n                <img onClick={color} src={`${urlImgBase}grey.png`} alt='grey-tshirt' id='grey'></img>\n                <img onClick={color} src={`${urlImgBase}blue.png`} alt='blue-tshirt' id='blue'></img>\n                <img onClick={color} src={`${urlImgBase}red.png`} alt='red-tshirt' id='red'></img>\n            </div>\n            <hr/>\n            <h4>Write Text</h4>\n            <input onChange={upperText} type='text' className='form-control form-control-sm mb-2' placeholder='Upper Text' />\n            <input onChange={lowerText} type='text' className='form-control form-control-sm' placeholder='Lower Text' />\n            <hr/>\n            <h4>Upload Image</h4>\n            <div className='form-group'>\n                <input onChange={uploadImage} type='file' className='form-control-file mb-2'></input>\n            </div>\n            <hr />\n            <h4>Text Size</h4>\n            <input onChange={textSize} type='range' min='15' max='42'></input>\n            <hr />\n            <h4>Text Color</h4>\n            <select onChange={textColor} className='form-control form-control-sm mb-2'>\n                <option>White</option>\n                <option>Black</option>\n                <option>Red</option>                \n                <option>Blue</option>\n                <option>Green</option>\n            </select>\n            <hr/>\n            <button className='btn btn-primary btn-sm mb-2' id='saveDesign' onClick={saveDesign}>Save</button>\n\n        </div>\n    )\n}\n\nexport default Settings;","import firebase from 'firebase/app';\nimport 'firebase/storage';\n\n\n  // Your web app's Firebase configuration\n  var firebaseConfig = {\n    apiKey: \"AIzaSyAQUPzsKhs6KtN1kd5HU_5HKJv2VFyyTt0\",\n    authDomain: \"mytshirtapp-7afcf.firebaseapp.com\",\n    databaseURL: \"https://mytshirtapp-7afcf.firebaseio.com\",\n    projectId: \"mytshirtapp-7afcf\",\n    storageBucket: \"mytshirtapp-7afcf.appspot.com\",\n    messagingSenderId: \"322266476304\",\n    appId: \"1:322266476304:web:245b368f87c4cd1d\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  const storage = firebase.storage();\n\n  export{\n      storage,firebase as default\n  } ","import React,{Component} from 'react';\nimport Display from '../design/Display';\nimport Settings from '../design/Setting';\nimport {connect} from 'react-redux';\nimport {storage} from '../../config/firebaseConfig';\nimport {saveDesign} from '../../store/actions/saveDesignAction'\n\nclass Dashboard extends Component{\n\n    state = {\n        tshirtColor:'black',\n        upperText:'This is Upper Text',\n        lowerText:'This is Lower Text',\n        memeImg:'',\n        textSize: 40,\n        textColor:'white', \n        url:''\n    }\n\n    handleTshirtColor=(e) =>{\n        this.setState({\n            tshirtColor:e.target.id\n        })\n    }\n    handleUpperText = (e) =>{\n        this.setState({\n            upperText:e.target.value\n        })\n    }\n    handleLowerText = (e) =>{\n        this.setState({\n            lowerText:e.target.value\n        })\n    }\n\n    handleTextSize = (e) => {\n        this.setState({\n            textSize:e.target.value\n        })\n    }\n\n    formatText(){\n        const size = this.state.textSize;\n        return parseInt(size);\n    }\n\n    handleTextColor=(e)=>{\n        this.setState({\n            textColor:e.target.value\n        })\n    }\n\n\n    handleImageUpload =(e)=>{\n        if(e.target.files[0]){\n            const image = (e.target.files[0])\n            const uploadTask = storage.ref(`images/${image.name}`).put(image);\n            uploadTask.on('state_changed',\n            (snapshot)=>{\n                console.log(snapshot);\n            },\n            (error) =>{\n                console.log(error);\n            },\n            ()=>{\n                storage.ref('images').child(image.name).getDownloadURL().then(url=>{\n                    this.setState({url});\n                })\n            }\n            )\n        }\n    }\n\n    handleSaveDesign = (e) =>{\n        if(e.target.id === 'saveDesign'){\n            this.props.saveDesign(this.state)\n        }\n    }\n\n    render(){\n        return(\n            <div className='container py-5'>\n                <div className='row'>\n                    <div className='col-lg-8'>\n                        <Display \n                        display={this.state}\n                        textFormat ={this.formatText()}\n                        />\n                    </div>\n                    <div className='col-lg-4'>\n                        <Settings\n                        color={this.handleTshirtColor}\n                        upperText={this.handleUpperText}\n                        lowerText={this.handleLowerText}\n                        uploadImage={this.handleImageUpload}\n                        textSize={this.handleTextSize}\n                        textColor={this.handleTextColor}\n                        saveDesign={this.handleSaveDesign}\n                        />\n\n                    </div>\n                </div>\n            </div>\n           \n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        saveDesign:(design) => dispatch(saveDesign(design))\n    }\n    \n}\n\n\nexport default connect(null,mapDispatchToProps)(Dashboard);","export const saveDesign = (design) => {\n    return (dispatch,getState) => {\n        dispatch({type:'SAVE_DESIGN',design})\n    }\n}","import React,{Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass Navbar extends Component{\n    \n    render(){\n        return(\n           <nav className='navbar navbar-expand-lg navbar-light bg-primary'>\n               <div className='container'>\n                    <Link to='/' className='nav-brand text-white'>Tshirt MEME Design</Link>\n                    <button type='button' className='navbar-toggler' data-toggle='collapse' data-target='#navbarNav'>\n                    </button>\n\n                    <div className='collapse navbar-collapse' id='navbarNav'>\n                    <ul className='navbar-nav ml-auto'>\n                        <li className='nav-item'>\n                            <Link to='/' className='nav-link'>Sign-up</Link>\n                        </li>\n                        <li className='nav-item'>\n                            <Link to='/' className='nav-link'>Log-in</Link>\n                        </li>\n                        \n                    </ul>\n               </div>\n               </div>\n              \n           </nav>\n        )\n    }\n}\n\nexport default Navbar;","import React from 'react';\nconst imgBase ='https://res.cloudinary.com/dkkgmzpqd/image/upload/v1545217305/T-shirt%20Images/'\n\nconst ProjectLists = ({design}) =>{\n    return(\n        <div className='item text-center'>\n            <div className='card card-body'>\n                <img className='img-fluid' \n                src={`${imgBase}${design.tshirtColor}`} alt='t-shirt'></img>\n                <p>{design.name}</p>\n                <button className='btn- btn-primary btn-sm mb-2'>View Project</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectLists ; ","import React, {Component} from 'react';\nimport ProjectList from './ProjectList';\nimport {connect} from 'react-redux';\n\nclass Project extends Component{\n    render(){\n        const {designs} = this.props\n        return (\n            <div className='container mb-5'>\n                <div className='row'>\n                    <div className='project-list'>\n\n                        {designs && designs.map(design => {\n                            return(\n                                <ProjectList design={design} key={design.id}/>\n                            )\n                        })}\n\n                        \n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStatetoProps = (state) =>{\n    return{\n        designs:state.design.designs\n    }\n    \n}\n\nexport default connect(mapStatetoProps)(Project);","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Navbar from './components/navbar/Navbar';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\nimport Project from './components/project/Projects';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar/>\n        <Dashboard />\n        <Project />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n","const initialstate = {}\n\nconst authReducer = (state=initialstate, action) =>{\n    return state\n}\n\nexport default authReducer;","const initialstate ={\n    designs:[\n        {id:1,name:'Project One',tshirtColor:'black'},\n        {id:2,name:'Project Two',tshirtColor:'blue'},\n        {id:3,name:'Project Three',tshirtColor:'red'},\n        {id:4,name:'Project Four',tshirtColor:'white'},\n        {id:5,name:'Project Five',tshirtColor:'blue'}\n    ]\n}\n\n\n\nconst designReducer=(state=initialstate,action)=>{\n    switch(action.type){\n        case'SAVE_DESIGN':\n        console.log('design is saved',action.design)\n    }\n    return state\n}\n\nexport default designReducer;\n","import authReducer from './authReducer';\nimport designReducer from './designReducer';\nimport {combineReducers} from 'redux';\n\nconst mainReducer = combineReducers({\n    auth:authReducer,\n    design:designReducer\n})\n\nexport default mainReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {createStore, applyMiddleware} from 'redux';\nimport mainReducer from './store/reducers/mainReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(mainReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}